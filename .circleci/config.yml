# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.9
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/lordrio/chinpongoyServer
    steps:
      - checkout
      # - run: ssh-keyscan -H gitlab.com >> ~/.ssh/known_hosts
      # - add_ssh_keys:
      #     fingerprints:
      #       - "da:e5:af:21:fe:9b:3f:0a:b5:a2:ca:cd:35:39:ee:a2"
      # - run: git clone git@gitlab.com:fadzli/goland.git /go/src/goland/

      # specify any bash command here prefixed with `run: `
      - run: go get -v -t -d ./...

      # build binary for linux
      - run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -o build/chipongoy-linux .
      # build binary for macOS
      - run: CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -a -installsuffix cgo -o build/chipongoy-mac .
      # build binary for windows
      - run: CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -a -installsuffix cgo -o build/chipongoy-win .

      - run: go test -v ./...

      - store_artifacts:
            path: /go/src/github.com/lordrio/chinpongoyServer/build
            destination: build
